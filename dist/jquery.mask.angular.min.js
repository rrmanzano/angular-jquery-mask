/**
 * angular-jquery-mask - v0.5
 * A simple wrapper for jquery.mask.js by @igorescobar. This directive allows you to add a mask based on jquery.mask.js plugin.
 * https://github.com/rrmanzano/angular-jquery-mask
 * License: MIT http://opensource.org/licenses/MIT
 **/
var AngularMaskPluginUtils;!function(n){var a=function(){function n(n){var a=this;this.foo=function(n){},this.action=function(){for(var n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];var r=a.$scope.$parent.$eval(a.propertyName);r&&(a.$scope.$root.$$phase?r.apply(a.$scope.$parent,n):a.$scope.$parent.$apply(function(){r.apply(a.$scope.$parent,n)}))},this.$scope=n}return n}();n.EventHandler=a}(AngularMaskPluginUtils||(AngularMaskPluginUtils={}));var AngularMaskPlugin;!function(n){var a=function(){function n(){this.restrict="A",this.require="ngModel",this.scope={options:"=?maskOptions"}}return n.prototype.link=function(n,a,t,r){var e={};n.options&&angular.copy(n.options,e),r.$parsers.push(function(n){return t.maskModelClean?a.cleanVal():n}),r.$formatters.push(function(n){return n?a.masked(n):(a.unmask().mask(t.maskInput,e),n)});!function(){if(t.maskEvents){var a=n.$eval(t.maskEvents);for(var r in a)if(a[r]){var s=new AngularMaskPluginUtils.EventHandler(n);s.propertyName=a[r],e[r]=s.action}}}(),a.mask(t.maskInput,e)},n.$inject=["$scope","element","attrs","ngModel"],n}();n.MaskDirective=a}(AngularMaskPlugin||(AngularMaskPlugin={})),angular.module("angular-mask-plugin",[]).directive("maskInput",function(){return new AngularMaskPlugin.MaskDirective});